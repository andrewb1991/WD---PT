[{"/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/index.js":"1","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/App.js":"2","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/footer/Footer.jsx":"3","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/navbar/BlogNavbar.jsx":"4","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/blog/Blog.jsx":"5","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/new/New.jsx":"6","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/home/Home.jsx":"7","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/likes/BlogLike.jsx":"8","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/blog/blog-author/BlogAuthor.jsx":"9","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/blog/blog-list/BlogList.jsx":"10","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/blog/blog-item/BlogItem.jsx":"11","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/blog/blog-item/useFetch.js":"12","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/states/BlogState.js":"13","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/blog/Comments.js":"14","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/blog/useFetch.js":"15","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/blog/blog-list/FormImage.js":"16","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/login/Login.js":"17"},{"size":680,"mtime":1678904333578,"results":"18","hashOfConfig":"19"},{"size":811,"mtime":1680184184593,"results":"20","hashOfConfig":"19"},{"size":384,"mtime":1678442516931,"results":"21","hashOfConfig":"19"},{"size":1357,"mtime":1679412567168,"results":"22","hashOfConfig":"19"},{"size":2176,"mtime":1679417507383,"results":"23","hashOfConfig":"19"},{"size":5121,"mtime":1679648861046,"results":"24","hashOfConfig":"19"},{"size":392,"mtime":1679649409197,"results":"25","hashOfConfig":"19"},{"size":885,"mtime":1678442516931,"results":"26","hashOfConfig":"19"},{"size":448,"mtime":1678442516916,"results":"27","hashOfConfig":"19"},{"size":2409,"mtime":1680183193546,"results":"28","hashOfConfig":"19"},{"size":723,"mtime":1678891698610,"results":"29","hashOfConfig":"19"},{"size":501,"mtime":1678736683918,"results":"30","hashOfConfig":"19"},{"size":1271,"mtime":1678992403670,"results":"31","hashOfConfig":"19"},{"size":584,"mtime":1679417222968,"results":"32","hashOfConfig":"19"},{"size":501,"mtime":1679416606371,"results":"33","hashOfConfig":"19"},{"size":847,"mtime":1679930265978,"results":"34","hashOfConfig":"19"},{"size":4656,"mtime":1680184657734,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"hd1dp9",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"40"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"40"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/index.js",["97"],[],"import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {combineReducers, configureStore} from '@reduxjs/toolkit'\r\nimport blogsReducer from './states/BlogState'\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst reducer = combineReducers({\r\nblogsStore: blogsReducer\r\n})\r\n\r\nconst store = configureStore({reducer})\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App/>\r\n    </Provider>\r\n\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n",[],"/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/App.js",["98","99","100"],[],"/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/footer/Footer.jsx",[],[],"/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/navbar/BlogNavbar.jsx",["101","102","103","104","105"],[],"import React, {useState, useEffect} from 'react'\r\nimport { Button, Container, Navbar} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport \"./styles.css\";\r\nimport useFetch from '../blog/blog-item/useFetch';\r\nconst NavBar = props => {\r\n  const [search, setSearch] = useState('');\r\n  const [click, setClick] = useState(false)\r\n  const {data, loading, error} = useFetch(\"http://localhost:4040/BlogPosts\")\r\n  console.log(data, loading, error)\r\n  return (\r\n    <Navbar expand=\"lg\" className=\"blog-navbar\" fixed=\"top\">\r\n      <Container className=\"justify-content-between\">\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          <img className=\"blog-navbar-brand\" alt=\"logo\" src={logo} />\r\n        </Navbar.Brand>\r\n\r\n        <Button as={Link} to=\"/new\" className=\"blog-navbar-add-button bg-dark\" size=\"lg\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-plus-lg\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\r\n          </svg>\r\n          Nuovo Articolo\r\n        </Button>\r\n       \r\n\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/blog/Blog.jsx",["106","107","108","109","110","111","112","113"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Image } from \"react-bootstrap\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport BlogAuthor from \"../../components/blog/blog-author/BlogAuthor\";\r\nimport BlogLike from \"../../components/likes/BlogLike\";\r\nimport { getBlogs } from \"../../states/BlogState\";\r\nimport { blogsState, blogsStateLoading, blogsStateError } from \"../../states/BlogState\";\r\nimport posts from \"../../data/posts.json\";\r\nimport \"./styles.css\";\r\nimport Comments from \"./Comments\";\r\n\r\nconst Blog = (props) => {\r\n  const [search, setSearch] = useState('');\r\n  const [click, setClick] = useState(false)\r\n  const {id} = useParams()\r\n  const dispatch = useDispatch()\r\n  const isBlogsLoading = useSelector(blogsStateLoading)\r\n  const allBlogs = useSelector(blogsState)\r\n  console.log(id)\r\n  console.log(allBlogs)\r\n  useEffect(()=>{\r\n    dispatch(getBlogs(id))\r\n  }, [dispatch, id])\r\n\r\n  return (\r\n    <>\r\n    <div className=\"blog-details-root\">\r\n\r\n          <Container>\r\n            <Image className=\"blog-details-cover\" src={allBlogs.cover} fluid />\r\n            <h1 className=\"blog-details-title\">{allBlogs.title}</h1>\r\n\r\n            <div className=\"blog-details-container\">\r\n              <div className=\"blog-details-author\">\r\n                <BlogAuthor {...allBlogs.author} />\r\n              </div>\r\n              <div className=\"blog-details-info\">\r\n                <div>{allBlogs.createdAt}</div>\r\n                 {/* <div>{lettura da `${...allBlogs.readTime.time}` `${...allBlogs.readTime.unit}`}</div>  */}\r\n                <div\r\n                  style={{\r\n                  marginTop: 20,\r\n                  }}\r\n                  >\r\n                  <BlogLike defaultLikes={[\"123\"]} onChange={console.log} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n              __html: allBlogs.content,\r\n              }}\r\n              ></div>\r\n          <Comments key={props.id}></Comments>\r\n          </Container>\r\n          </div>\r\n    </>\r\n          )\r\n}\r\nexport default Blog;\r\n","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/new/New.jsx",["114","115","116"],[],"import React, { useCallback, useState } from \"react\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./styles.css\";\r\nconst NewBlogPost = (props) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [formData, setFormData] = useState({});\r\n  const handleChange = useCallback((value) => {\r\n    setText(value);\r\n  });\r\n\r\n  const dataToPost = {\r\n    category: formData.category,\r\n    title: formData.title,\r\n    cover: formData.cover,\r\n    readTime: {\r\n      unit: formData.unit,\r\n      time: formData.time,\r\n    },\r\n    author: {\r\n      id: formData.id,\r\n      name: formData.name,\r\n      avatar: formData.avatar,\r\n    },\r\n    content: formData.content,\r\n  };\r\n  console.log(dataToPost)\r\n\r\n  const fetchPost = async(e)=>{\r\n    e.preventDefault();\r\n    await fetch(\"http://localhost:4040/BlogPosts/\", {\r\n    method: \"POST\", \r\n    headers: {\r\n    \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(dataToPost)\r\n  })\r\n  }\r\n\r\n  const handleContentChange = (value) =>{\r\n    setFormData({\r\n    ...formData,\r\n    content: value\r\n    })\r\n  }\r\n  return (\r\n    <Container className=\"new-blog-container\">\r\n      <Form className=\"mt-5\" onSubmit={fetchPost}>\r\n        <Form.Group controlId=\"blog-form\" className=\"mt-3\">\r\n          <Form.Label>Titolo</Form.Label>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            placeholder=\"Title\"\r\n            onChange={(e) =>\r\n              setFormData({\r\n                ...formData,\r\n                title: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"blog-form\" className=\"mt-3\">\r\n          <Form.Label>Cover</Form.Label>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            placeholder=\"Cover\"\r\n            onChange={(e) =>\r\n              setFormData({\r\n                ...formData,\r\n                cover: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"blog-form\" className=\"mt-3\">\r\n          <Form.Label>Category</Form.Label>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            placeholder=\"Category\"\r\n            onChange={(e) =>\r\n              setFormData({\r\n                ...formData,\r\n                category: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"blog-form\" className=\"mt-3\">\r\n          <Form.Label>Time</Form.Label>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            placeholder=\"Time\"\r\n            onChange={(e) =>\r\n              setFormData({\r\n                ...formData,\r\n                time: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"blog-form\" className=\"mt-3\">\r\n          <Form.Label>Unit</Form.Label>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            placeholder=\"Unit\"\r\n            onChange={(e) =>\r\n              setFormData({\r\n                ...formData,\r\n                unit: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"blog-form\" className=\"mt-3\">\r\n          <Form.Label>Author Id</Form.Label>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            placeholder=\"author id\"\r\n            onChange={(e) =>\r\n              setFormData({\r\n                ...formData,\r\n                id: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"blog-form\" className=\"mt-3\">\r\n          <Form.Label>Author Name</Form.Label>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            placeholder=\"author name\"\r\n            onChange={(e) =>\r\n              setFormData({\r\n                ...formData,\r\n                name: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"blog-form\" className=\"mt-3\">\r\n          <Form.Label>Author Avatar</Form.Label>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            placeholder=\"author avatar\"\r\n            onChange={(e) =>\r\n              setFormData({\r\n                ...formData,\r\n                avatar: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"blog-content\" className=\"mt-3\">\r\n          <Form.Label>Contenuto Blog</Form.Label>\r\n          <ReactQuill\r\n            onChange={handleContentChange}\r\n            className=\"new-blog-content\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"d-flex mt-3 justify-content-end\">\r\n          <Button type=\"reset\" size=\"lg\" variant=\"outline-dark\">\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            size=\"lg\"\r\n            variant=\"dark\"\r\n            style={{\r\n              marginLeft: \"1em\",\r\n            }}\r\n          >\r\n            Invia\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewBlogPost;\r\n","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/home/Home.jsx",[],[],"/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/likes/BlogLike.jsx",["117"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { AiOutlineLike } from \"react-icons/ai\";\r\nimport { Button } from \"react-bootstrap\";\r\nconst yourUserId = \"123\";\r\nexport default function BlogLike({ defaultLikes, onChange }) {\r\n  const [likes, setLikes] = useState(defaultLikes);\r\n  const iLikedThisArticle = likes.includes(yourUserId);\r\n  const toggleLike = () => {\r\n    if (iLikedThisArticle) {\r\n      setLikes(likes.filter((id) => id !== yourUserId));\r\n    } else {\r\n      setLikes([...likes, yourUserId]);\r\n    }\r\n    onChange && onChange(likes);\r\n  };\r\n  useEffect(() => {\r\n    onChange && onChange(likes);\r\n  }, [iLikedThisArticle]);\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={toggleLike}\r\n        variant={iLikedThisArticle ? \"dark\" : \"dark-outline\"}\r\n      >\r\n        <AiOutlineLike /> {`${likes.length}  like`}\r\n      </Button>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/blog/blog-author/BlogAuthor.jsx",[],[],"/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/blog/blog-list/BlogList.jsx",["118","119","120","121","122","123"],[],"import React from \"react\";\r\nimport {useState, useEffect} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Container, Row, Image} from \"react-bootstrap\";\r\nimport BlogItem from \"../blog-item/BlogItem\";\r\nimport useFetch from \"../blog-item/useFetch\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport PageItem from 'react-bootstrap/PageItem'\r\nimport { FormComponent } from \"./FormImage\";\r\n\r\nconst BlogList = (props) => {\r\n  const [search, setSearch] = useState('');\r\n  const [click, setClick] = useState(false)\r\n  const [page, setPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const limit = 3;\r\n  const {data, loading, error} = useFetch(`http://localhost:4040/BlogPosts/?page=${page}&limit=${limit}`)\r\nconsole.log(data)\r\n\r\n\r\n  useEffect(() => {\r\n    if(data){\r\n      setPageCount(data.pageCount)\r\n    }\r\n}, [data]);\r\n\r\nconst handlePrevious = () => {\r\n  setPage((page) =>{\r\n    if(page === 1) return page;\r\n  return page - 1});\r\n};\r\n \r\nconst handleNext = () => {\r\n  setPage((page) => {\r\n    if(page === pageCount) return page;\r\n  return page +1;\r\n  });\r\n};\r\n  return (\r\n    <>\r\n{loading && <h1>Loading Blog...</h1>} \r\n<Container>\r\n<div className='container'>\r\n      <Form>\r\n          <InputGroup className='my-3'>\r\n            <Form.Control\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              placeholder='Search Blogs'\r\n            />\r\n          </InputGroup>\r\n        </Form>\r\n      <div className='d-flex row justify-between'>\r\n    { !loading && data && data.filter((item)=>{\r\n        return search.toLowerCase() === ''\r\n         ? item\r\n         : item.title.toLowerCase().includes(search); \r\n  })\r\n  .map((post, i) => (\r\n    <Col\r\n      key={`item-${i}`}\r\n      md={4}\r\n      style={{\r\n        marginBottom: 50,\r\n      }}\r\n    >\r\n      <Link to={`/blog/${post._id}`}>\r\n      <BlogItem key={post._id} {...post} />\r\n      </Link>\r\n    </Col>\r\n  ))}\r\n     </div>\r\n   </div> \r\n   \r\n   <div>\r\n    <Pagination className=\"justify-content-center\">\r\n      <Pagination.Prev  onClick={handlePrevious} />\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      <Pagination.Next onClick={handleNext} />\r\n      </Pagination>\r\n  </div>\r\n    </Container>\r\n  <FormComponent></FormComponent>\r\n    </>  \r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/blog/blog-item/BlogItem.jsx",["124"],[],"import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link} from \"react-router-dom\";\r\nimport BlogAuthor from \"../blog-author/BlogAuthor\";\r\nimport useFetch from \"../blog-item/useFetch\"\r\nimport \"./styles.css\";\r\nconst BlogItem = (props) => {\r\n  const { title, cover, author, _id } = props;\r\n  return (\r\n    <Link to={`/blog/${_id}`} className=\"blog-link\">\r\n      <Card className=\"blog-card\">\r\n        <Card.Img variant=\"top\" src={cover} className=\"blog-cover\" />\r\n        <Card.Body>\r\n          <Card.Title>{title}</Card.Title>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <BlogAuthor {...author} />\r\n        </Card.Footer>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default BlogItem;\r\n","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/blog/blog-item/useFetch.js",[],[],"/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/states/BlogState.js",[],[],"/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/blog/Comments.js",["125"],[],"import React from \"react\";\nimport useFetch from \"../blog/useFetch\";\nimport { useParams } from \"react-router\";\n\nconst Comments = (props) => {\nconst {blogpostId} = useParams()\nconst {data, loading, error} = useFetch(\"http://localhost:4040/BlogComments/\")\nconsole.log(data)\n  return (\n    <>\n    {!loading && data && data.map((i, id)=>{\n    return (\n        <div>\n        <ul key={blogpostId} props={i}>\n            <li>{i.author}</li>\n            <li>{i.comment}</li>\n            <li>{i.rate}</li>\n        </ul>\n    </div>\n        )\n    })}\n    \n    </>\n    )\n}\n\nexport default Comments","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/blog/useFetch.js",[],[],"/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/components/blog/blog-list/FormImage.js",["126"],[],"import {useState} from \"react\";\n\nexport const FormComponent = ()=>{\n\n    const [src, setSrc] = useState(\"\");\n\n    const submit = async (e)=>{\n        e.preventDefault();\n        \n        let data = new FormData();\n        data.append('uploadImage', e.target[0].files[0]) //il primo parametro è il name che usereme nel metodo single di multer\n\n        let res = await fetch(\"http://localhost:4040/BlogPosts/640f71e3bea275c3f3b27013/author/avatar/\", {\n            method: 'POST',\n            body: data\n        }).then(res=>res.json())\n        console.log(\"RESPONSE\", res);\n        setSrc(res.upload);\n        //aggiungere dati al backend\n    }\n    return (<form onSubmit={submit} enctype=\"multipart/form-data\">\n        <input type=\"file\" name=\"uploadImage\" />\n        <button type=\"submit\">Invia</button>\n\n\n        <img src={src} />\n    </form>)\n}","/Users/andri/Library/Mobile Documents/com~apple~CloudDocs/EPICODE/WD - PT/M6/M6D1/UPLOAD SU GITHUB/striveblog/striveblog/src/views/login/Login.js",["127"],[],{"ruleId":"128","severity":1,"message":"129","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":23},{"ruleId":"128","severity":1,"message":"132","line":9,"column":3,"nodeType":"130","messageId":"131","endLine":9,"endColumn":9},{"ruleId":"128","severity":1,"message":"133","line":12,"column":3,"nodeType":"130","messageId":"131","endLine":12,"endColumn":7},{"ruleId":"128","severity":1,"message":"134","line":15,"column":10,"nodeType":"130","messageId":"131","endLine":15,"endColumn":13},{"ruleId":"128","severity":1,"message":"135","line":1,"column":26,"nodeType":"130","messageId":"131","endLine":1,"endColumn":35},{"ruleId":"128","severity":1,"message":"136","line":8,"column":10,"nodeType":"130","messageId":"131","endLine":8,"endColumn":16},{"ruleId":"128","severity":1,"message":"137","line":8,"column":18,"nodeType":"130","messageId":"131","endLine":8,"endColumn":27},{"ruleId":"128","severity":1,"message":"138","line":9,"column":10,"nodeType":"130","messageId":"131","endLine":9,"endColumn":15},{"ruleId":"128","severity":1,"message":"139","line":9,"column":17,"nodeType":"130","messageId":"131","endLine":9,"endColumn":25},{"ruleId":"128","severity":1,"message":"140","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":21},{"ruleId":"128","severity":1,"message":"141","line":8,"column":41,"nodeType":"130","messageId":"131","endLine":8,"endColumn":56},{"ruleId":"128","severity":1,"message":"142","line":9,"column":8,"nodeType":"130","messageId":"131","endLine":9,"endColumn":13},{"ruleId":"128","severity":1,"message":"136","line":14,"column":10,"nodeType":"130","messageId":"131","endLine":14,"endColumn":16},{"ruleId":"128","severity":1,"message":"137","line":14,"column":18,"nodeType":"130","messageId":"131","endLine":14,"endColumn":27},{"ruleId":"128","severity":1,"message":"138","line":15,"column":10,"nodeType":"130","messageId":"131","endLine":15,"endColumn":15},{"ruleId":"128","severity":1,"message":"139","line":15,"column":17,"nodeType":"130","messageId":"131","endLine":15,"endColumn":25},{"ruleId":"128","severity":1,"message":"143","line":18,"column":9,"nodeType":"130","messageId":"131","endLine":18,"endColumn":23},{"ruleId":"128","severity":1,"message":"144","line":7,"column":10,"nodeType":"130","messageId":"131","endLine":7,"endColumn":14},{"ruleId":"128","severity":1,"message":"145","line":9,"column":9,"nodeType":"130","messageId":"131","endLine":9,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":9,"column":24,"nodeType":"130","endLine":9,"endColumn":35},{"ruleId":"146","severity":1,"message":"148","line":18,"column":6,"nodeType":"149","endLine":18,"endColumn":25,"suggestions":"150"},{"ruleId":"128","severity":1,"message":"151","line":4,"column":26,"nodeType":"130","messageId":"131","endLine":4,"endColumn":29},{"ruleId":"128","severity":1,"message":"152","line":4,"column":31,"nodeType":"130","messageId":"131","endLine":4,"endColumn":36},{"ruleId":"128","severity":1,"message":"153","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":16},{"ruleId":"128","severity":1,"message":"138","line":15,"column":10,"nodeType":"130","messageId":"131","endLine":15,"endColumn":15},{"ruleId":"128","severity":1,"message":"139","line":15,"column":17,"nodeType":"130","messageId":"131","endLine":15,"endColumn":25},{"ruleId":"128","severity":1,"message":"154","line":19,"column":25,"nodeType":"130","messageId":"131","endLine":19,"endColumn":30},{"ruleId":"128","severity":1,"message":"155","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":16},{"ruleId":"128","severity":1,"message":"154","line":7,"column":23,"nodeType":"130","messageId":"131","endLine":7,"endColumn":28},{"ruleId":"156","severity":1,"message":"157","line":26,"column":9,"nodeType":"158","endLine":26,"endColumn":26},{"ruleId":"128","severity":1,"message":"159","line":19,"column":11,"nodeType":"130","messageId":"131","endLine":19,"endColumn":15},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","'Nav' is defined but never used.","'useEffect' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'useNavigate' is defined but never used.","'blogsStateError' is defined but never used.","'posts' is defined but never used.","'isBlogsLoading' is assigned a value but never used.","'text' is assigned a value but never used.","'handleChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'likes' and 'onChange'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["160"],"'Row' is defined but never used.","'Image' is defined but never used.","'PageItem' is defined but never used.","'error' is assigned a value but never used.","'useFetch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.",{"desc":"161","fix":"162"},"Update the dependencies array to be: [iLikedThisArticle, likes, onChange]",{"range":"163","text":"164"},[626,645],"[iLikedThisArticle, likes, onChange]"]